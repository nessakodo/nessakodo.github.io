{"ast":null,"code":"import { getRangeValue } from \"../../Utils\";\nfunction updateWobble(particle, delta) {\n  var _a;\n  const wobble = particle.options.wobble;\n  if (!wobble.enable || !particle.wobble) {\n    return;\n  }\n  const speed = particle.wobble.speed * delta.factor;\n  const distance = ((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor / (1000 / 60);\n  const max = 2 * Math.PI;\n  particle.wobble.angle += speed;\n  if (particle.wobble.angle > max) {\n    particle.wobble.angle -= max;\n  }\n  particle.position.x += distance * Math.cos(particle.wobble.angle);\n  particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n  init(particle) {\n    const wobbleOpt = particle.options.wobble;\n    if (wobbleOpt.enable) {\n      particle.wobble = {\n        angle: Math.random() * Math.PI * 2,\n        speed: getRangeValue(wobbleOpt.speed) / 360\n      };\n    } else {\n      particle.wobble = {\n        angle: 0,\n        speed: 0\n      };\n    }\n    particle.retina.wobbleDistance = getRangeValue(wobbleOpt.distance) * this.container.retina.pixelRatio;\n  }\n  isEnabled(particle) {\n    return !particle.destroyed && !particle.spawning && particle.options.wobble.enable;\n  }\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n    updateWobble(particle, delta);\n  }\n}","map":{"version":3,"names":["getRangeValue","updateWobble","particle","delta","_a","wobble","options","enable","speed","factor","distance","retina","wobbleDistance","max","Math","PI","angle","position","x","cos","y","abs","sin","WobbleUpdater","constructor","container","init","wobbleOpt","random","pixelRatio","isEnabled","destroyed","spawning","update"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/tsparticles/esm/Updaters/Wobble/WobbleUpdater.js"],"sourcesContent":["import { getRangeValue } from \"../../Utils\";\nfunction updateWobble(particle, delta) {\n    var _a;\n    const wobble = particle.options.wobble;\n    if (!wobble.enable || !particle.wobble) {\n        return;\n    }\n    const speed = particle.wobble.speed * delta.factor;\n    const distance = (((_a = particle.retina.wobbleDistance) !== null && _a !== void 0 ? _a : 0) * delta.factor) / (1000 / 60);\n    const max = 2 * Math.PI;\n    particle.wobble.angle += speed;\n    if (particle.wobble.angle > max) {\n        particle.wobble.angle -= max;\n    }\n    particle.position.x += distance * Math.cos(particle.wobble.angle);\n    particle.position.y += distance * Math.abs(Math.sin(particle.wobble.angle));\n}\nexport class WobbleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const wobbleOpt = particle.options.wobble;\n        if (wobbleOpt.enable) {\n            particle.wobble = {\n                angle: Math.random() * Math.PI * 2,\n                speed: getRangeValue(wobbleOpt.speed) / 360,\n            };\n        }\n        else {\n            particle.wobble = {\n                angle: 0,\n                speed: 0,\n            };\n        }\n        particle.retina.wobbleDistance = getRangeValue(wobbleOpt.distance) * this.container.retina.pixelRatio;\n    }\n    isEnabled(particle) {\n        return !particle.destroyed && !particle.spawning && particle.options.wobble.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateWobble(particle, delta);\n    }\n}\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,aAAa;AAC3C,SAASC,YAAYA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACnC,IAAIC,EAAE;EACN,MAAMC,MAAM,GAAGH,QAAQ,CAACI,OAAO,CAACD,MAAM;EACtC,IAAI,CAACA,MAAM,CAACE,MAAM,IAAI,CAACL,QAAQ,CAACG,MAAM,EAAE;IACpC;EACJ;EACA,MAAMG,KAAK,GAAGN,QAAQ,CAACG,MAAM,CAACG,KAAK,GAAGL,KAAK,CAACM,MAAM;EAClD,MAAMC,QAAQ,GAAI,CAAC,CAACN,EAAE,GAAGF,QAAQ,CAACS,MAAM,CAACC,cAAc,MAAM,IAAI,IAAIR,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,IAAID,KAAK,CAACM,MAAM,IAAK,IAAI,GAAG,EAAE,CAAC;EAC1H,MAAMI,GAAG,GAAG,CAAC,GAAGC,IAAI,CAACC,EAAE;EACvBb,QAAQ,CAACG,MAAM,CAACW,KAAK,IAAIR,KAAK;EAC9B,IAAIN,QAAQ,CAACG,MAAM,CAACW,KAAK,GAAGH,GAAG,EAAE;IAC7BX,QAAQ,CAACG,MAAM,CAACW,KAAK,IAAIH,GAAG;EAChC;EACAX,QAAQ,CAACe,QAAQ,CAACC,CAAC,IAAIR,QAAQ,GAAGI,IAAI,CAACK,GAAG,CAACjB,QAAQ,CAACG,MAAM,CAACW,KAAK,CAAC;EACjEd,QAAQ,CAACe,QAAQ,CAACG,CAAC,IAAIV,QAAQ,GAAGI,IAAI,CAACO,GAAG,CAACP,IAAI,CAACQ,GAAG,CAACpB,QAAQ,CAACG,MAAM,CAACW,KAAK,CAAC,CAAC;AAC/E;AACA,OAAO,MAAMO,aAAa,CAAC;EACvBC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EACAC,IAAIA,CAACxB,QAAQ,EAAE;IACX,MAAMyB,SAAS,GAAGzB,QAAQ,CAACI,OAAO,CAACD,MAAM;IACzC,IAAIsB,SAAS,CAACpB,MAAM,EAAE;MAClBL,QAAQ,CAACG,MAAM,GAAG;QACdW,KAAK,EAAEF,IAAI,CAACc,MAAM,CAAC,CAAC,GAAGd,IAAI,CAACC,EAAE,GAAG,CAAC;QAClCP,KAAK,EAAER,aAAa,CAAC2B,SAAS,CAACnB,KAAK,CAAC,GAAG;MAC5C,CAAC;IACL,CAAC,MACI;MACDN,QAAQ,CAACG,MAAM,GAAG;QACdW,KAAK,EAAE,CAAC;QACRR,KAAK,EAAE;MACX,CAAC;IACL;IACAN,QAAQ,CAACS,MAAM,CAACC,cAAc,GAAGZ,aAAa,CAAC2B,SAAS,CAACjB,QAAQ,CAAC,GAAG,IAAI,CAACe,SAAS,CAACd,MAAM,CAACkB,UAAU;EACzG;EACAC,SAASA,CAAC5B,QAAQ,EAAE;IAChB,OAAO,CAACA,QAAQ,CAAC6B,SAAS,IAAI,CAAC7B,QAAQ,CAAC8B,QAAQ,IAAI9B,QAAQ,CAACI,OAAO,CAACD,MAAM,CAACE,MAAM;EACtF;EACA0B,MAAMA,CAAC/B,QAAQ,EAAEC,KAAK,EAAE;IACpB,IAAI,CAAC,IAAI,CAAC2B,SAAS,CAAC5B,QAAQ,CAAC,EAAE;MAC3B;IACJ;IACAD,YAAY,CAACC,QAAQ,EAAEC,KAAK,CAAC;EACjC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}