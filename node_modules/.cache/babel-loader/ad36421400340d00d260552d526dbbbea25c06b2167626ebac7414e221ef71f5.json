{"ast":null,"code":"export class FrameManager {\n  constructor(container) {\n    this.container = container;\n  }\n  async nextFrame(timestamp) {\n    var _a;\n    try {\n      const container = this.container;\n      if (container.lastFrameTime !== undefined && timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n        container.draw(false);\n        return;\n      }\n      (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : container.lastFrameTime = timestamp;\n      const deltaValue = timestamp - container.lastFrameTime;\n      const delta = {\n        value: deltaValue,\n        factor: 60 * deltaValue / 1000\n      };\n      container.lifeTime += delta.value;\n      container.lastFrameTime = timestamp;\n      if (deltaValue > 1000) {\n        container.draw(false);\n        return;\n      }\n      await container.particles.draw(delta);\n      if (container.duration > 0 && container.lifeTime > container.duration) {\n        container.destroy();\n        return;\n      }\n      if (container.getAnimationStatus()) {\n        container.draw(false);\n      }\n    } catch (e) {\n      console.error(\"tsParticles error in animation loop\", e);\n    }\n  }\n}","map":{"version":3,"names":["FrameManager","constructor","container","nextFrame","timestamp","_a","lastFrameTime","undefined","fpsLimit","draw","deltaValue","delta","value","factor","lifeTime","particles","duration","destroy","getAnimationStatus","e","console","error"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/tsparticles/esm/Core/Utils/FrameManager.js"],"sourcesContent":["export class FrameManager {\n    constructor(container) {\n        this.container = container;\n    }\n    async nextFrame(timestamp) {\n        var _a;\n        try {\n            const container = this.container;\n            if (container.lastFrameTime !== undefined &&\n                timestamp < container.lastFrameTime + 1000 / container.fpsLimit) {\n                container.draw(false);\n                return;\n            }\n            (_a = container.lastFrameTime) !== null && _a !== void 0 ? _a : (container.lastFrameTime = timestamp);\n            const deltaValue = timestamp - container.lastFrameTime;\n            const delta = {\n                value: deltaValue,\n                factor: (60 * deltaValue) / 1000,\n            };\n            container.lifeTime += delta.value;\n            container.lastFrameTime = timestamp;\n            if (deltaValue > 1000) {\n                container.draw(false);\n                return;\n            }\n            await container.particles.draw(delta);\n            if (container.duration > 0 && container.lifeTime > container.duration) {\n                container.destroy();\n                return;\n            }\n            if (container.getAnimationStatus()) {\n                container.draw(false);\n            }\n        }\n        catch (e) {\n            console.error(\"tsParticles error in animation loop\", e);\n        }\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,YAAY,CAAC;EACtBC,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;EAC9B;EACA,MAAMC,SAASA,CAACC,SAAS,EAAE;IACvB,IAAIC,EAAE;IACN,IAAI;MACA,MAAMH,SAAS,GAAG,IAAI,CAACA,SAAS;MAChC,IAAIA,SAAS,CAACI,aAAa,KAAKC,SAAS,IACrCH,SAAS,GAAGF,SAAS,CAACI,aAAa,GAAG,IAAI,GAAGJ,SAAS,CAACM,QAAQ,EAAE;QACjEN,SAAS,CAACO,IAAI,CAAC,KAAK,CAAC;QACrB;MACJ;MACA,CAACJ,EAAE,GAAGH,SAAS,CAACI,aAAa,MAAM,IAAI,IAAID,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAIH,SAAS,CAACI,aAAa,GAAGF,SAAU;MACrG,MAAMM,UAAU,GAAGN,SAAS,GAAGF,SAAS,CAACI,aAAa;MACtD,MAAMK,KAAK,GAAG;QACVC,KAAK,EAAEF,UAAU;QACjBG,MAAM,EAAG,EAAE,GAAGH,UAAU,GAAI;MAChC,CAAC;MACDR,SAAS,CAACY,QAAQ,IAAIH,KAAK,CAACC,KAAK;MACjCV,SAAS,CAACI,aAAa,GAAGF,SAAS;MACnC,IAAIM,UAAU,GAAG,IAAI,EAAE;QACnBR,SAAS,CAACO,IAAI,CAAC,KAAK,CAAC;QACrB;MACJ;MACA,MAAMP,SAAS,CAACa,SAAS,CAACN,IAAI,CAACE,KAAK,CAAC;MACrC,IAAIT,SAAS,CAACc,QAAQ,GAAG,CAAC,IAAId,SAAS,CAACY,QAAQ,GAAGZ,SAAS,CAACc,QAAQ,EAAE;QACnEd,SAAS,CAACe,OAAO,CAAC,CAAC;QACnB;MACJ;MACA,IAAIf,SAAS,CAACgB,kBAAkB,CAAC,CAAC,EAAE;QAChChB,SAAS,CAACO,IAAI,CAAC,KAAK,CAAC;MACzB;IACJ,CAAC,CACD,OAAOU,CAAC,EAAE;MACNC,OAAO,CAACC,KAAK,CAAC,qCAAqC,EAAEF,CAAC,CAAC;IAC3D;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}