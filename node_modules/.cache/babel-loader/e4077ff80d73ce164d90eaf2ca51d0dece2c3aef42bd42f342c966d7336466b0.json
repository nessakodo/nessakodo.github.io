{"ast":null,"code":"export class Vector {\n  constructor(x, y) {\n    let defX, defY;\n    if (y === undefined) {\n      if (typeof x === \"number\") {\n        throw new Error(\"tsParticles - Vector not initialized correctly\");\n      }\n      const coords = x;\n      [defX, defY] = [coords.x, coords.y];\n    } else {\n      [defX, defY] = [x, y];\n    }\n    this.x = defX;\n    this.y = defY;\n  }\n  static clone(source) {\n    return Vector.create(source.x, source.y);\n  }\n  static create(x, y) {\n    return new Vector(x, y);\n  }\n  static get origin() {\n    return Vector.create(0, 0);\n  }\n  get angle() {\n    return Math.atan2(this.y, this.x);\n  }\n  set angle(angle) {\n    this.updateFromAngle(angle, this.length);\n  }\n  get length() {\n    return Math.sqrt(this.x ** 2 + this.y ** 2);\n  }\n  set length(length) {\n    this.updateFromAngle(this.angle, length);\n  }\n  add(v) {\n    return Vector.create(this.x + v.x, this.y + v.y);\n  }\n  addTo(v) {\n    this.x += v.x;\n    this.y += v.y;\n  }\n  sub(v) {\n    return Vector.create(this.x - v.x, this.y - v.y);\n  }\n  subFrom(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n  }\n  mult(n) {\n    return Vector.create(this.x * n, this.y * n);\n  }\n  multTo(n) {\n    this.x *= n;\n    this.y *= n;\n  }\n  div(n) {\n    return Vector.create(this.x / n, this.y / n);\n  }\n  divTo(n) {\n    this.x /= n;\n    this.y /= n;\n  }\n  distanceTo(v) {\n    return this.sub(v).length;\n  }\n  getLengthSq() {\n    return this.x ** 2 + this.y ** 2;\n  }\n  distanceToSq(v) {\n    return this.sub(v).getLengthSq();\n  }\n  manhattanDistanceTo(v) {\n    return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n  }\n  copy() {\n    return Vector.clone(this);\n  }\n  setTo(velocity) {\n    this.x = velocity.x;\n    this.y = velocity.y;\n  }\n  rotate(angle) {\n    return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n  }\n  updateFromAngle(angle, length) {\n    this.x = Math.cos(angle) * length;\n    this.y = Math.sin(angle) * length;\n  }\n}","map":{"version":3,"names":["Vector","constructor","x","y","defX","defY","undefined","Error","coords","clone","source","create","origin","angle","Math","atan2","updateFromAngle","length","sqrt","add","v","addTo","sub","subFrom","mult","n","multTo","div","divTo","distanceTo","getLengthSq","distanceToSq","manhattanDistanceTo","abs","copy","setTo","velocity","rotate","cos","sin"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/tsparticles/esm/Core/Utils/Vector.js"],"sourcesContent":["export class Vector {\n    constructor(x, y) {\n        let defX, defY;\n        if (y === undefined) {\n            if (typeof x === \"number\") {\n                throw new Error(\"tsParticles - Vector not initialized correctly\");\n            }\n            const coords = x;\n            [defX, defY] = [coords.x, coords.y];\n        }\n        else {\n            [defX, defY] = [x, y];\n        }\n        this.x = defX;\n        this.y = defY;\n    }\n    static clone(source) {\n        return Vector.create(source.x, source.y);\n    }\n    static create(x, y) {\n        return new Vector(x, y);\n    }\n    static get origin() {\n        return Vector.create(0, 0);\n    }\n    get angle() {\n        return Math.atan2(this.y, this.x);\n    }\n    set angle(angle) {\n        this.updateFromAngle(angle, this.length);\n    }\n    get length() {\n        return Math.sqrt(this.x ** 2 + this.y ** 2);\n    }\n    set length(length) {\n        this.updateFromAngle(this.angle, length);\n    }\n    add(v) {\n        return Vector.create(this.x + v.x, this.y + v.y);\n    }\n    addTo(v) {\n        this.x += v.x;\n        this.y += v.y;\n    }\n    sub(v) {\n        return Vector.create(this.x - v.x, this.y - v.y);\n    }\n    subFrom(v) {\n        this.x -= v.x;\n        this.y -= v.y;\n    }\n    mult(n) {\n        return Vector.create(this.x * n, this.y * n);\n    }\n    multTo(n) {\n        this.x *= n;\n        this.y *= n;\n    }\n    div(n) {\n        return Vector.create(this.x / n, this.y / n);\n    }\n    divTo(n) {\n        this.x /= n;\n        this.y /= n;\n    }\n    distanceTo(v) {\n        return this.sub(v).length;\n    }\n    getLengthSq() {\n        return this.x ** 2 + this.y ** 2;\n    }\n    distanceToSq(v) {\n        return this.sub(v).getLengthSq();\n    }\n    manhattanDistanceTo(v) {\n        return Math.abs(v.x - this.x) + Math.abs(v.y - this.y);\n    }\n    copy() {\n        return Vector.clone(this);\n    }\n    setTo(velocity) {\n        this.x = velocity.x;\n        this.y = velocity.y;\n    }\n    rotate(angle) {\n        return Vector.create(this.x * Math.cos(angle) - this.y * Math.sin(angle), this.x * Math.sin(angle) + this.y * Math.cos(angle));\n    }\n    updateFromAngle(angle, length) {\n        this.x = Math.cos(angle) * length;\n        this.y = Math.sin(angle) * length;\n    }\n}\n"],"mappings":"AAAA,OAAO,MAAMA,MAAM,CAAC;EAChBC,WAAWA,CAACC,CAAC,EAAEC,CAAC,EAAE;IACd,IAAIC,IAAI,EAAEC,IAAI;IACd,IAAIF,CAAC,KAAKG,SAAS,EAAE;MACjB,IAAI,OAAOJ,CAAC,KAAK,QAAQ,EAAE;QACvB,MAAM,IAAIK,KAAK,CAAC,gDAAgD,CAAC;MACrE;MACA,MAAMC,MAAM,GAAGN,CAAC;MAChB,CAACE,IAAI,EAAEC,IAAI,CAAC,GAAG,CAACG,MAAM,CAACN,CAAC,EAAEM,MAAM,CAACL,CAAC,CAAC;IACvC,CAAC,MACI;MACD,CAACC,IAAI,EAAEC,IAAI,CAAC,GAAG,CAACH,CAAC,EAAEC,CAAC,CAAC;IACzB;IACA,IAAI,CAACD,CAAC,GAAGE,IAAI;IACb,IAAI,CAACD,CAAC,GAAGE,IAAI;EACjB;EACA,OAAOI,KAAKA,CAACC,MAAM,EAAE;IACjB,OAAOV,MAAM,CAACW,MAAM,CAACD,MAAM,CAACR,CAAC,EAAEQ,MAAM,CAACP,CAAC,CAAC;EAC5C;EACA,OAAOQ,MAAMA,CAACT,CAAC,EAAEC,CAAC,EAAE;IAChB,OAAO,IAAIH,MAAM,CAACE,CAAC,EAAEC,CAAC,CAAC;EAC3B;EACA,WAAWS,MAAMA,CAAA,EAAG;IAChB,OAAOZ,MAAM,CAACW,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;EAC9B;EACA,IAAIE,KAAKA,CAAA,EAAG;IACR,OAAOC,IAAI,CAACC,KAAK,CAAC,IAAI,CAACZ,CAAC,EAAE,IAAI,CAACD,CAAC,CAAC;EACrC;EACA,IAAIW,KAAKA,CAACA,KAAK,EAAE;IACb,IAAI,CAACG,eAAe,CAACH,KAAK,EAAE,IAAI,CAACI,MAAM,CAAC;EAC5C;EACA,IAAIA,MAAMA,CAAA,EAAG;IACT,OAAOH,IAAI,CAACI,IAAI,CAAC,IAAI,CAAChB,CAAC,IAAI,CAAC,GAAG,IAAI,CAACC,CAAC,IAAI,CAAC,CAAC;EAC/C;EACA,IAAIc,MAAMA,CAACA,MAAM,EAAE;IACf,IAAI,CAACD,eAAe,CAAC,IAAI,CAACH,KAAK,EAAEI,MAAM,CAAC;EAC5C;EACAE,GAAGA,CAACC,CAAC,EAAE;IACH,OAAOpB,MAAM,CAACW,MAAM,CAAC,IAAI,CAACT,CAAC,GAAGkB,CAAC,CAAClB,CAAC,EAAE,IAAI,CAACC,CAAC,GAAGiB,CAAC,CAACjB,CAAC,CAAC;EACpD;EACAkB,KAAKA,CAACD,CAAC,EAAE;IACL,IAAI,CAAClB,CAAC,IAAIkB,CAAC,CAAClB,CAAC;IACb,IAAI,CAACC,CAAC,IAAIiB,CAAC,CAACjB,CAAC;EACjB;EACAmB,GAAGA,CAACF,CAAC,EAAE;IACH,OAAOpB,MAAM,CAACW,MAAM,CAAC,IAAI,CAACT,CAAC,GAAGkB,CAAC,CAAClB,CAAC,EAAE,IAAI,CAACC,CAAC,GAAGiB,CAAC,CAACjB,CAAC,CAAC;EACpD;EACAoB,OAAOA,CAACH,CAAC,EAAE;IACP,IAAI,CAAClB,CAAC,IAAIkB,CAAC,CAAClB,CAAC;IACb,IAAI,CAACC,CAAC,IAAIiB,CAAC,CAACjB,CAAC;EACjB;EACAqB,IAAIA,CAACC,CAAC,EAAE;IACJ,OAAOzB,MAAM,CAACW,MAAM,CAAC,IAAI,CAACT,CAAC,GAAGuB,CAAC,EAAE,IAAI,CAACtB,CAAC,GAAGsB,CAAC,CAAC;EAChD;EACAC,MAAMA,CAACD,CAAC,EAAE;IACN,IAAI,CAACvB,CAAC,IAAIuB,CAAC;IACX,IAAI,CAACtB,CAAC,IAAIsB,CAAC;EACf;EACAE,GAAGA,CAACF,CAAC,EAAE;IACH,OAAOzB,MAAM,CAACW,MAAM,CAAC,IAAI,CAACT,CAAC,GAAGuB,CAAC,EAAE,IAAI,CAACtB,CAAC,GAAGsB,CAAC,CAAC;EAChD;EACAG,KAAKA,CAACH,CAAC,EAAE;IACL,IAAI,CAACvB,CAAC,IAAIuB,CAAC;IACX,IAAI,CAACtB,CAAC,IAAIsB,CAAC;EACf;EACAI,UAAUA,CAACT,CAAC,EAAE;IACV,OAAO,IAAI,CAACE,GAAG,CAACF,CAAC,CAAC,CAACH,MAAM;EAC7B;EACAa,WAAWA,CAAA,EAAG;IACV,OAAO,IAAI,CAAC5B,CAAC,IAAI,CAAC,GAAG,IAAI,CAACC,CAAC,IAAI,CAAC;EACpC;EACA4B,YAAYA,CAACX,CAAC,EAAE;IACZ,OAAO,IAAI,CAACE,GAAG,CAACF,CAAC,CAAC,CAACU,WAAW,CAAC,CAAC;EACpC;EACAE,mBAAmBA,CAACZ,CAAC,EAAE;IACnB,OAAON,IAAI,CAACmB,GAAG,CAACb,CAAC,CAAClB,CAAC,GAAG,IAAI,CAACA,CAAC,CAAC,GAAGY,IAAI,CAACmB,GAAG,CAACb,CAAC,CAACjB,CAAC,GAAG,IAAI,CAACA,CAAC,CAAC;EAC1D;EACA+B,IAAIA,CAAA,EAAG;IACH,OAAOlC,MAAM,CAACS,KAAK,CAAC,IAAI,CAAC;EAC7B;EACA0B,KAAKA,CAACC,QAAQ,EAAE;IACZ,IAAI,CAAClC,CAAC,GAAGkC,QAAQ,CAAClC,CAAC;IACnB,IAAI,CAACC,CAAC,GAAGiC,QAAQ,CAACjC,CAAC;EACvB;EACAkC,MAAMA,CAACxB,KAAK,EAAE;IACV,OAAOb,MAAM,CAACW,MAAM,CAAC,IAAI,CAACT,CAAC,GAAGY,IAAI,CAACwB,GAAG,CAACzB,KAAK,CAAC,GAAG,IAAI,CAACV,CAAC,GAAGW,IAAI,CAACyB,GAAG,CAAC1B,KAAK,CAAC,EAAE,IAAI,CAACX,CAAC,GAAGY,IAAI,CAACyB,GAAG,CAAC1B,KAAK,CAAC,GAAG,IAAI,CAACV,CAAC,GAAGW,IAAI,CAACwB,GAAG,CAACzB,KAAK,CAAC,CAAC;EAClI;EACAG,eAAeA,CAACH,KAAK,EAAEI,MAAM,EAAE;IAC3B,IAAI,CAACf,CAAC,GAAGY,IAAI,CAACwB,GAAG,CAACzB,KAAK,CAAC,GAAGI,MAAM;IACjC,IAAI,CAACd,CAAC,GAAGW,IAAI,CAACyB,GAAG,CAAC1B,KAAK,CAAC,GAAGI,MAAM;EACrC;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}