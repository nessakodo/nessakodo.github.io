{"ast":null,"code":"import { deepExtend, setRangeValue } from \"../../../../Utils\";\nimport { Attract } from \"./Attract\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { OutModes } from \"./OutModes\";\nimport { Path } from \"./Path/Path\";\nimport { Spin } from \"./Spin\";\nimport { Trail } from \"./Trail\";\nexport class Move {\n  constructor() {\n    this.angle = new MoveAngle();\n    this.attract = new Attract();\n    this.decay = 0;\n    this.distance = {};\n    this.direction = \"none\";\n    this.drift = 0;\n    this.enable = false;\n    this.gravity = new MoveGravity();\n    this.path = new Path();\n    this.outModes = new OutModes();\n    this.random = false;\n    this.size = false;\n    this.speed = 2;\n    this.spin = new Spin();\n    this.straight = false;\n    this.trail = new Trail();\n    this.vibrate = false;\n    this.warp = false;\n  }\n  get collisions() {\n    return false;\n  }\n  set collisions(value) {}\n  get bounce() {\n    return this.collisions;\n  }\n  set bounce(value) {\n    this.collisions = value;\n  }\n  get out_mode() {\n    return this.outMode;\n  }\n  set out_mode(value) {\n    this.outMode = value;\n  }\n  get outMode() {\n    return this.outModes.default;\n  }\n  set outMode(value) {\n    this.outModes.default = value;\n  }\n  get noise() {\n    return this.path;\n  }\n  set noise(value) {\n    this.path = value;\n  }\n  load(data) {\n    var _a, _b, _c;\n    if (data === undefined) {\n      return;\n    }\n    if (data.angle !== undefined) {\n      if (typeof data.angle === \"number\") {\n        this.angle.value = data.angle;\n      } else {\n        this.angle.load(data.angle);\n      }\n    }\n    this.attract.load(data.attract);\n    if (data.decay !== undefined) {\n      this.decay = data.decay;\n    }\n    if (data.direction !== undefined) {\n      this.direction = data.direction;\n    }\n    if (data.distance !== undefined) {\n      this.distance = typeof data.distance === \"number\" ? {\n        horizontal: data.distance,\n        vertical: data.distance\n      } : deepExtend({}, data.distance);\n    }\n    if (data.drift !== undefined) {\n      this.drift = setRangeValue(data.drift);\n    }\n    if (data.enable !== undefined) {\n      this.enable = data.enable;\n    }\n    this.gravity.load(data.gravity);\n    const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n    if (data.outModes !== undefined || outMode !== undefined) {\n      if (typeof data.outModes === \"string\" || data.outModes === undefined && outMode !== undefined) {\n        this.outModes.load({\n          default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode\n        });\n      } else {\n        this.outModes.load(data.outModes);\n      }\n    }\n    this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n    if (data.random !== undefined) {\n      this.random = data.random;\n    }\n    if (data.size !== undefined) {\n      this.size = data.size;\n    }\n    if (data.speed !== undefined) {\n      this.speed = setRangeValue(data.speed);\n    }\n    this.spin.load(data.spin);\n    if (data.straight !== undefined) {\n      this.straight = data.straight;\n    }\n    this.trail.load(data.trail);\n    if (data.vibrate !== undefined) {\n      this.vibrate = data.vibrate;\n    }\n    if (data.warp !== undefined) {\n      this.warp = data.warp;\n    }\n  }\n}","map":{"version":3,"names":["deepExtend","setRangeValue","Attract","MoveAngle","MoveGravity","OutModes","Path","Spin","Trail","Move","constructor","angle","attract","decay","distance","direction","drift","enable","gravity","path","outModes","random","size","speed","spin","straight","trail","vibrate","warp","collisions","value","bounce","out_mode","outMode","default","noise","load","data","_a","_b","_c","undefined","horizontal","vertical"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/tsparticles/esm/Options/Classes/Particles/Move/Move.js"],"sourcesContent":["import { deepExtend, setRangeValue } from \"../../../../Utils\";\nimport { Attract } from \"./Attract\";\nimport { MoveAngle } from \"./MoveAngle\";\nimport { MoveGravity } from \"./MoveGravity\";\nimport { OutModes } from \"./OutModes\";\nimport { Path } from \"./Path/Path\";\nimport { Spin } from \"./Spin\";\nimport { Trail } from \"./Trail\";\nexport class Move {\n    constructor() {\n        this.angle = new MoveAngle();\n        this.attract = new Attract();\n        this.decay = 0;\n        this.distance = {};\n        this.direction = \"none\";\n        this.drift = 0;\n        this.enable = false;\n        this.gravity = new MoveGravity();\n        this.path = new Path();\n        this.outModes = new OutModes();\n        this.random = false;\n        this.size = false;\n        this.speed = 2;\n        this.spin = new Spin();\n        this.straight = false;\n        this.trail = new Trail();\n        this.vibrate = false;\n        this.warp = false;\n    }\n    get collisions() {\n        return false;\n    }\n    set collisions(value) {\n    }\n    get bounce() {\n        return this.collisions;\n    }\n    set bounce(value) {\n        this.collisions = value;\n    }\n    get out_mode() {\n        return this.outMode;\n    }\n    set out_mode(value) {\n        this.outMode = value;\n    }\n    get outMode() {\n        return this.outModes.default;\n    }\n    set outMode(value) {\n        this.outModes.default = value;\n    }\n    get noise() {\n        return this.path;\n    }\n    set noise(value) {\n        this.path = value;\n    }\n    load(data) {\n        var _a, _b, _c;\n        if (data === undefined) {\n            return;\n        }\n        if (data.angle !== undefined) {\n            if (typeof data.angle === \"number\") {\n                this.angle.value = data.angle;\n            }\n            else {\n                this.angle.load(data.angle);\n            }\n        }\n        this.attract.load(data.attract);\n        if (data.decay !== undefined) {\n            this.decay = data.decay;\n        }\n        if (data.direction !== undefined) {\n            this.direction = data.direction;\n        }\n        if (data.distance !== undefined) {\n            this.distance =\n                typeof data.distance === \"number\"\n                    ? {\n                        horizontal: data.distance,\n                        vertical: data.distance,\n                    }\n                    : deepExtend({}, data.distance);\n        }\n        if (data.drift !== undefined) {\n            this.drift = setRangeValue(data.drift);\n        }\n        if (data.enable !== undefined) {\n            this.enable = data.enable;\n        }\n        this.gravity.load(data.gravity);\n        const outMode = (_a = data.outMode) !== null && _a !== void 0 ? _a : data.out_mode;\n        if (data.outModes !== undefined || outMode !== undefined) {\n            if (typeof data.outModes === \"string\" || (data.outModes === undefined && outMode !== undefined)) {\n                this.outModes.load({\n                    default: (_b = data.outModes) !== null && _b !== void 0 ? _b : outMode,\n                });\n            }\n            else {\n                this.outModes.load(data.outModes);\n            }\n        }\n        this.path.load((_c = data.path) !== null && _c !== void 0 ? _c : data.noise);\n        if (data.random !== undefined) {\n            this.random = data.random;\n        }\n        if (data.size !== undefined) {\n            this.size = data.size;\n        }\n        if (data.speed !== undefined) {\n            this.speed = setRangeValue(data.speed);\n        }\n        this.spin.load(data.spin);\n        if (data.straight !== undefined) {\n            this.straight = data.straight;\n        }\n        this.trail.load(data.trail);\n        if (data.vibrate !== undefined) {\n            this.vibrate = data.vibrate;\n        }\n        if (data.warp !== undefined) {\n            this.warp = data.warp;\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}