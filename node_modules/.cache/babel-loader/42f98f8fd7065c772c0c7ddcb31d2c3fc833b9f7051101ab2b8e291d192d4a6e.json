{"ast":null,"code":"import { Circle, Constants, ExternalInteractorBase, Vector } from \"../../../Core\";\nimport { calcEasing, clamp, getDistances, isInArray } from \"../../../Utils\";\nexport class Attractor extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  isEnabled() {\n    const container = this.container,\n      options = container.actualOptions,\n      mouse = container.interactivity.mouse,\n      events = options.interactivity.events;\n    if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n      return false;\n    }\n    const hoverMode = events.onHover.mode,\n      clickMode = events.onClick.mode;\n    return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n  }\n  reset() {}\n  async interact() {\n    const container = this.container,\n      options = container.actualOptions,\n      mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent,\n      events = options.interactivity.events,\n      hoverEnabled = events.onHover.enable,\n      hoverMode = events.onHover.mode,\n      clickEnabled = events.onClick.enable,\n      clickMode = events.onClick.mode;\n    if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n      this.hoverAttract();\n    } else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n      this.clickAttract();\n    }\n  }\n  hoverAttract() {\n    const container = this.container;\n    const mousePos = container.interactivity.mouse.position;\n    if (!mousePos) {\n      return;\n    }\n    const attractRadius = container.retina.attractModeDistance;\n    this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n  }\n  processAttract(position, attractRadius, area) {\n    const container = this.container;\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    const query = container.particles.quadTree.query(area);\n    for (const particle of query) {\n      const {\n        dx,\n        dy,\n        distance\n      } = getDistances(particle.position, position);\n      const velocity = attractOptions.speed * attractOptions.factor;\n      const attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n      const normVec = Vector.create(distance === 0 ? velocity : dx / distance * attractFactor, distance === 0 ? velocity : dy / distance * attractFactor);\n      particle.position.subFrom(normVec);\n    }\n  }\n  clickAttract() {\n    const container = this.container;\n    if (!container.attract.finish) {\n      if (!container.attract.count) {\n        container.attract.count = 0;\n      }\n      container.attract.count++;\n      if (container.attract.count === container.particles.count) {\n        container.attract.finish = true;\n      }\n    }\n    if (container.attract.clicking) {\n      const mousePos = container.interactivity.mouse.clickPosition;\n      if (!mousePos) {\n        return;\n      }\n      const attractRadius = container.retina.attractModeDistance;\n      this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    } else if (container.attract.clicking === false) {\n      container.attract.particles = [];\n    }\n    return;\n  }\n}","map":{"version":3,"names":["Circle","Constants","ExternalInteractorBase","Vector","calcEasing","clamp","getDistances","isInArray","Attractor","constructor","container","isEnabled","options","actualOptions","mouse","interactivity","events","position","onHover","enable","clickPosition","onClick","hoverMode","mode","clickMode","reset","interact","mouseMoveStatus","status","mouseMoveEvent","hoverEnabled","clickEnabled","hoverAttract","clickAttract","mousePos","attractRadius","retina","attractModeDistance","processAttract","x","y","area","attractOptions","modes","attract","query","particles","quadTree","particle","dx","dy","distance","velocity","speed","factor","attractFactor","easing","maxSpeed","normVec","create","subFrom","finish","count","clicking"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/tsparticles/esm/Interactions/External/Attract/Attractor.js"],"sourcesContent":["import { Circle, Constants, ExternalInteractorBase, Vector } from \"../../../Core\";\nimport { calcEasing, clamp, getDistances, isInArray } from \"../../../Utils\";\nexport class Attractor extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled() {\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = options.interactivity.events;\n        if ((!mouse.position || !events.onHover.enable) && (!mouse.clickPosition || !events.onClick.enable)) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode, clickMode = events.onClick.mode;\n        return isInArray(\"attract\", hoverMode) || isInArray(\"attract\", clickMode);\n    }\n    reset() {\n    }\n    async interact() {\n        const container = this.container, options = container.actualOptions, mouseMoveStatus = container.interactivity.status === Constants.mouseMoveEvent, events = options.interactivity.events, hoverEnabled = events.onHover.enable, hoverMode = events.onHover.mode, clickEnabled = events.onClick.enable, clickMode = events.onClick.mode;\n        if (mouseMoveStatus && hoverEnabled && isInArray(\"attract\", hoverMode)) {\n            this.hoverAttract();\n        }\n        else if (clickEnabled && isInArray(\"attract\", clickMode)) {\n            this.clickAttract();\n        }\n    }\n    hoverAttract() {\n        const container = this.container;\n        const mousePos = container.interactivity.mouse.position;\n        if (!mousePos) {\n            return;\n        }\n        const attractRadius = container.retina.attractModeDistance;\n        this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n    }\n    processAttract(position, attractRadius, area) {\n        const container = this.container;\n        const attractOptions = container.actualOptions.interactivity.modes.attract;\n        const query = container.particles.quadTree.query(area);\n        for (const particle of query) {\n            const { dx, dy, distance } = getDistances(particle.position, position);\n            const velocity = attractOptions.speed * attractOptions.factor;\n            const attractFactor = clamp(calcEasing(1 - distance / attractRadius, attractOptions.easing) * velocity, 0, attractOptions.maxSpeed);\n            const normVec = Vector.create(distance === 0 ? velocity : (dx / distance) * attractFactor, distance === 0 ? velocity : (dy / distance) * attractFactor);\n            particle.position.subFrom(normVec);\n        }\n    }\n    clickAttract() {\n        const container = this.container;\n        if (!container.attract.finish) {\n            if (!container.attract.count) {\n                container.attract.count = 0;\n            }\n            container.attract.count++;\n            if (container.attract.count === container.particles.count) {\n                container.attract.finish = true;\n            }\n        }\n        if (container.attract.clicking) {\n            const mousePos = container.interactivity.mouse.clickPosition;\n            if (!mousePos) {\n                return;\n            }\n            const attractRadius = container.retina.attractModeDistance;\n            this.processAttract(mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius));\n        }\n        else if (container.attract.clicking === false) {\n            container.attract.particles = [];\n        }\n        return;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}