{"ast":null,"code":"import { Circle, CircleWarp, ParticlesInteractorBase } from \"../../../Core\";\nimport { getDistance, getLinkRandomColor } from \"../../../Utils\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n  let distance = getDistance(pos1, pos2);\n  if (!warp || distance <= optDistance) {\n    return distance;\n  }\n  const pos2NE = {\n    x: pos2.x - canvasSize.width,\n    y: pos2.y\n  };\n  distance = getDistance(pos1, pos2NE);\n  if (distance <= optDistance) {\n    return distance;\n  }\n  const pos2SE = {\n    x: pos2.x - canvasSize.width,\n    y: pos2.y - canvasSize.height\n  };\n  distance = getDistance(pos1, pos2SE);\n  if (distance <= optDistance) {\n    return distance;\n  }\n  const pos2SW = {\n    x: pos2.x,\n    y: pos2.y - canvasSize.height\n  };\n  distance = getDistance(pos1, pos2SW);\n  return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n  constructor(container) {\n    super(container);\n  }\n  isEnabled(particle) {\n    return particle.options.links.enable;\n  }\n  reset() {}\n  async interact(p1) {\n    var _a;\n    p1.links = [];\n    const pos1 = p1.getPosition();\n    const container = this.container;\n    const canvasSize = container.canvas.size;\n    if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n      return;\n    }\n    const linkOpt1 = p1.options.links;\n    const optOpacity = linkOpt1.opacity;\n    const optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n    const warp = linkOpt1.warp;\n    const range = warp ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize) : new Circle(pos1.x, pos1.y, optDistance);\n    const query = container.particles.quadTree.query(range);\n    for (const p2 of query) {\n      const linkOpt2 = p2.options.links;\n      if (p1 === p2 || !linkOpt2.enable || linkOpt1.id !== linkOpt2.id || p2.spawning || p2.destroyed || p1.links.map(t => t.destination).indexOf(p2) !== -1 || p2.links.map(t => t.destination).indexOf(p1) !== -1) {\n        continue;\n      }\n      const pos2 = p2.getPosition();\n      if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n        continue;\n      }\n      const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n      if (distance > optDistance) {\n        return;\n      }\n      const opacityLine = (1 - distance / optDistance) * optOpacity;\n      this.setColor(p1);\n      p1.links.push({\n        destination: p2,\n        opacity: opacityLine\n      });\n    }\n  }\n  setColor(p1) {\n    const container = this.container;\n    const linksOptions = p1.options.links;\n    let linkColor = linksOptions.id === undefined ? container.particles.linksColor : container.particles.linksColors.get(linksOptions.id);\n    if (!linkColor) {\n      const optColor = linksOptions.color;\n      linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n      if (linksOptions.id === undefined) {\n        container.particles.linksColor = linkColor;\n      } else {\n        container.particles.linksColors.set(linksOptions.id, linkColor);\n      }\n    }\n  }\n}","map":{"version":3,"names":["Circle","CircleWarp","ParticlesInteractorBase","getDistance","getLinkRandomColor","getLinkDistance","pos1","pos2","optDistance","canvasSize","warp","distance","pos2NE","x","width","y","pos2SE","height","pos2SW","Linker","constructor","container","isEnabled","particle","options","links","enable","reset","interact","p1","_a","getPosition","canvas","size","linkOpt1","optOpacity","opacity","retina","linksDistance","range","query","particles","quadTree","p2","linkOpt2","id","spawning","destroyed","map","t","destination","indexOf","opacityLine","setColor","push","linksOptions","linkColor","undefined","linksColor","linksColors","get","optColor","color","blink","consent","set"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/tsparticles/esm/Interactions/Particles/Links/Linker.js"],"sourcesContent":["import { Circle, CircleWarp, ParticlesInteractorBase } from \"../../../Core\";\nimport { getDistance, getLinkRandomColor } from \"../../../Utils\";\nfunction getLinkDistance(pos1, pos2, optDistance, canvasSize, warp) {\n    let distance = getDistance(pos1, pos2);\n    if (!warp || distance <= optDistance) {\n        return distance;\n    }\n    const pos2NE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y,\n    };\n    distance = getDistance(pos1, pos2NE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SE = {\n        x: pos2.x - canvasSize.width,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SE);\n    if (distance <= optDistance) {\n        return distance;\n    }\n    const pos2SW = {\n        x: pos2.x,\n        y: pos2.y - canvasSize.height,\n    };\n    distance = getDistance(pos1, pos2SW);\n    return distance;\n}\nexport class Linker extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    isEnabled(particle) {\n        return particle.options.links.enable;\n    }\n    reset() {\n    }\n    async interact(p1) {\n        var _a;\n        p1.links = [];\n        const pos1 = p1.getPosition();\n        const container = this.container;\n        const canvasSize = container.canvas.size;\n        if (pos1.x < 0 || pos1.y < 0 || pos1.x > canvasSize.width || pos1.y > canvasSize.height) {\n            return;\n        }\n        const linkOpt1 = p1.options.links;\n        const optOpacity = linkOpt1.opacity;\n        const optDistance = (_a = p1.retina.linksDistance) !== null && _a !== void 0 ? _a : container.retina.linksDistance;\n        const warp = linkOpt1.warp;\n        const range = warp\n            ? new CircleWarp(pos1.x, pos1.y, optDistance, canvasSize)\n            : new Circle(pos1.x, pos1.y, optDistance);\n        const query = container.particles.quadTree.query(range);\n        for (const p2 of query) {\n            const linkOpt2 = p2.options.links;\n            if (p1 === p2 ||\n                !linkOpt2.enable ||\n                linkOpt1.id !== linkOpt2.id ||\n                p2.spawning ||\n                p2.destroyed ||\n                p1.links.map((t) => t.destination).indexOf(p2) !== -1 ||\n                p2.links.map((t) => t.destination).indexOf(p1) !== -1) {\n                continue;\n            }\n            const pos2 = p2.getPosition();\n            if (pos2.x < 0 || pos2.y < 0 || pos2.x > canvasSize.width || pos2.y > canvasSize.height) {\n                continue;\n            }\n            const distance = getLinkDistance(pos1, pos2, optDistance, canvasSize, warp && linkOpt2.warp);\n            if (distance > optDistance) {\n                return;\n            }\n            const opacityLine = (1 - distance / optDistance) * optOpacity;\n            this.setColor(p1);\n            p1.links.push({\n                destination: p2,\n                opacity: opacityLine,\n            });\n        }\n    }\n    setColor(p1) {\n        const container = this.container;\n        const linksOptions = p1.options.links;\n        let linkColor = linksOptions.id === undefined\n            ? container.particles.linksColor\n            : container.particles.linksColors.get(linksOptions.id);\n        if (!linkColor) {\n            const optColor = linksOptions.color;\n            linkColor = getLinkRandomColor(optColor, linksOptions.blink, linksOptions.consent);\n            if (linksOptions.id === undefined) {\n                container.particles.linksColor = linkColor;\n            }\n            else {\n                container.particles.linksColors.set(linksOptions.id, linkColor);\n            }\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}