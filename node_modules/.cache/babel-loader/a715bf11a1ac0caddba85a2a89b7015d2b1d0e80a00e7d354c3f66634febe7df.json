{"ast":null,"code":"import { getRangeValue } from \"../../Utils\";\nexport function bounceHorizontal(data) {\n  if (!(data.outMode === \"bounce\" || data.outMode === \"bounce-horizontal\" || data.outMode === \"bounceHorizontal\" || data.outMode === \"split\")) {\n    return;\n  }\n  const velocity = data.particle.velocity.x;\n  let bounced = false;\n  if (data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0 || data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0) {\n    const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n    data.particle.velocity.x *= -newVelocity;\n    bounced = true;\n  }\n  if (!bounced) {\n    return;\n  }\n  const minPos = data.offset.x + data.size;\n  if (data.bounds.right >= data.canvasSize.width) {\n    data.particle.position.x = data.canvasSize.width - minPos;\n  } else if (data.bounds.left <= 0) {\n    data.particle.position.x = minPos;\n  }\n  if (data.outMode === \"split\") {\n    data.particle.destroy();\n  }\n}\nexport function bounceVertical(data) {\n  if (data.outMode === \"bounce\" || data.outMode === \"bounce-vertical\" || data.outMode === \"bounceVertical\" || data.outMode === \"split\") {\n    const velocity = data.particle.velocity.y;\n    let bounced = false;\n    if (data.direction === \"bottom\" && data.bounds.bottom >= data.canvasSize.height && velocity > 0 || data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0) {\n      const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n      data.particle.velocity.y *= -newVelocity;\n      bounced = true;\n    }\n    if (!bounced) {\n      return;\n    }\n    const minPos = data.offset.y + data.size;\n    if (data.bounds.bottom >= data.canvasSize.height) {\n      data.particle.position.y = data.canvasSize.height - minPos;\n    } else if (data.bounds.top <= 0) {\n      data.particle.position.y = minPos;\n    }\n    if (data.outMode === \"split\") {\n      data.particle.destroy();\n    }\n  }\n}","map":{"version":3,"names":["getRangeValue","bounceHorizontal","data","outMode","velocity","particle","x","bounced","direction","bounds","right","canvasSize","width","left","newVelocity","options","bounce","horizontal","value","minPos","offset","size","position","destroy","bounceVertical","y","bottom","height","top","vertical"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/tsparticles/esm/Updaters/OutModes/Utils.js"],"sourcesContent":["import { getRangeValue } from \"../../Utils\";\nexport function bounceHorizontal(data) {\n    if (!(data.outMode === \"bounce\" ||\n        data.outMode === \"bounce-horizontal\" ||\n        data.outMode === \"bounceHorizontal\" ||\n        data.outMode === \"split\")) {\n        return;\n    }\n    const velocity = data.particle.velocity.x;\n    let bounced = false;\n    if ((data.direction === \"right\" && data.bounds.right >= data.canvasSize.width && velocity > 0) ||\n        (data.direction === \"left\" && data.bounds.left <= 0 && velocity < 0)) {\n        const newVelocity = getRangeValue(data.particle.options.bounce.horizontal.value);\n        data.particle.velocity.x *= -newVelocity;\n        bounced = true;\n    }\n    if (!bounced) {\n        return;\n    }\n    const minPos = data.offset.x + data.size;\n    if (data.bounds.right >= data.canvasSize.width) {\n        data.particle.position.x = data.canvasSize.width - minPos;\n    }\n    else if (data.bounds.left <= 0) {\n        data.particle.position.x = minPos;\n    }\n    if (data.outMode === \"split\") {\n        data.particle.destroy();\n    }\n}\nexport function bounceVertical(data) {\n    if (data.outMode === \"bounce\" ||\n        data.outMode === \"bounce-vertical\" ||\n        data.outMode === \"bounceVertical\" ||\n        data.outMode === \"split\") {\n        const velocity = data.particle.velocity.y;\n        let bounced = false;\n        if ((data.direction === \"bottom\" &&\n            data.bounds.bottom >= data.canvasSize.height &&\n            velocity > 0) ||\n            (data.direction === \"top\" && data.bounds.top <= 0 && velocity < 0)) {\n            const newVelocity = getRangeValue(data.particle.options.bounce.vertical.value);\n            data.particle.velocity.y *= -newVelocity;\n            bounced = true;\n        }\n        if (!bounced) {\n            return;\n        }\n        const minPos = data.offset.y + data.size;\n        if (data.bounds.bottom >= data.canvasSize.height) {\n            data.particle.position.y = data.canvasSize.height - minPos;\n        }\n        else if (data.bounds.top <= 0) {\n            data.particle.position.y = minPos;\n        }\n        if (data.outMode === \"split\") {\n            data.particle.destroy();\n        }\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}