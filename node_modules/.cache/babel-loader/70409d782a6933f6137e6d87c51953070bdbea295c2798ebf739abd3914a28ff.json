{"ast":null,"code":"import { Circle } from \"./Circle\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils\";\nexport class QuadTree {\n  constructor(rectangle, capacity) {\n    this.rectangle = rectangle;\n    this.capacity = capacity;\n    this.points = [];\n    this.divided = false;\n  }\n  subdivide() {\n    const x = this.rectangle.position.x;\n    const y = this.rectangle.position.y;\n    const w = this.rectangle.size.width;\n    const h = this.rectangle.size.height;\n    const capacity = this.capacity;\n    this.northEast = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n    this.northWest = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n    this.southEast = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n    this.southWest = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n    this.divided = true;\n  }\n  insert(point) {\n    var _a, _b, _c, _d, _e;\n    if (!this.rectangle.contains(point.position)) {\n      return false;\n    }\n    if (this.points.length < this.capacity) {\n      this.points.push(point);\n      return true;\n    }\n    if (!this.divided) {\n      this.subdivide();\n    }\n    return (_e = ((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) || ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) || ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) || ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point))) !== null && _e !== void 0 ? _e : false;\n  }\n  queryCircle(position, radius) {\n    return this.query(new Circle(position.x, position.y, radius));\n  }\n  queryCircleWarp(position, radius, containerOrSize) {\n    const container = containerOrSize;\n    const size = containerOrSize;\n    return this.query(new CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n  }\n  queryRectangle(position, size) {\n    return this.query(new Rectangle(position.x, position.y, size.width, size.height));\n  }\n  query(range, found) {\n    var _a, _b, _c, _d;\n    const res = found !== null && found !== void 0 ? found : [];\n    if (!range.intersects(this.rectangle)) {\n      return [];\n    } else {\n      for (const p of this.points) {\n        if (!range.contains(p.position) && getDistance(range.position, p.position) > p.particle.getRadius()) {\n          continue;\n        }\n        res.push(p.particle);\n      }\n      if (this.divided) {\n        (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n        (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n        (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n        (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n      }\n    }\n    return res;\n  }\n}","map":{"version":3,"names":["Circle","CircleWarp","Rectangle","getDistance","QuadTree","constructor","rectangle","capacity","points","divided","subdivide","x","position","y","w","size","width","h","height","northEast","northWest","southEast","southWest","insert","point","_a","_b","_c","_d","_e","contains","length","push","queryCircle","radius","query","queryCircleWarp","containerOrSize","container","canvas","undefined","queryRectangle","range","found","res","intersects","p","particle","getRadius"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/tsparticles/esm/Core/Utils/QuadTree.js"],"sourcesContent":["import { Circle } from \"./Circle\";\nimport { CircleWarp } from \"./CircleWarp\";\nimport { Rectangle } from \"./Rectangle\";\nimport { getDistance } from \"../../Utils\";\nexport class QuadTree {\n    constructor(rectangle, capacity) {\n        this.rectangle = rectangle;\n        this.capacity = capacity;\n        this.points = [];\n        this.divided = false;\n    }\n    subdivide() {\n        const x = this.rectangle.position.x;\n        const y = this.rectangle.position.y;\n        const w = this.rectangle.size.width;\n        const h = this.rectangle.size.height;\n        const capacity = this.capacity;\n        this.northEast = new QuadTree(new Rectangle(x, y, w / 2, h / 2), capacity);\n        this.northWest = new QuadTree(new Rectangle(x + w / 2, y, w / 2, h / 2), capacity);\n        this.southEast = new QuadTree(new Rectangle(x, y + h / 2, w / 2, h / 2), capacity);\n        this.southWest = new QuadTree(new Rectangle(x + w / 2, y + h / 2, w / 2, h / 2), capacity);\n        this.divided = true;\n    }\n    insert(point) {\n        var _a, _b, _c, _d, _e;\n        if (!this.rectangle.contains(point.position)) {\n            return false;\n        }\n        if (this.points.length < this.capacity) {\n            this.points.push(point);\n            return true;\n        }\n        if (!this.divided) {\n            this.subdivide();\n        }\n        return ((_e = (((_a = this.northEast) === null || _a === void 0 ? void 0 : _a.insert(point)) ||\n            ((_b = this.northWest) === null || _b === void 0 ? void 0 : _b.insert(point)) ||\n            ((_c = this.southEast) === null || _c === void 0 ? void 0 : _c.insert(point)) ||\n            ((_d = this.southWest) === null || _d === void 0 ? void 0 : _d.insert(point)))) !== null && _e !== void 0 ? _e : false);\n    }\n    queryCircle(position, radius) {\n        return this.query(new Circle(position.x, position.y, radius));\n    }\n    queryCircleWarp(position, radius, containerOrSize) {\n        const container = containerOrSize;\n        const size = containerOrSize;\n        return this.query(new CircleWarp(position.x, position.y, radius, container.canvas !== undefined ? container.canvas.size : size));\n    }\n    queryRectangle(position, size) {\n        return this.query(new Rectangle(position.x, position.y, size.width, size.height));\n    }\n    query(range, found) {\n        var _a, _b, _c, _d;\n        const res = found !== null && found !== void 0 ? found : [];\n        if (!range.intersects(this.rectangle)) {\n            return [];\n        }\n        else {\n            for (const p of this.points) {\n                if (!range.contains(p.position) && getDistance(range.position, p.position) > p.particle.getRadius()) {\n                    continue;\n                }\n                res.push(p.particle);\n            }\n            if (this.divided) {\n                (_a = this.northEast) === null || _a === void 0 ? void 0 : _a.query(range, res);\n                (_b = this.northWest) === null || _b === void 0 ? void 0 : _b.query(range, res);\n                (_c = this.southEast) === null || _c === void 0 ? void 0 : _c.query(range, res);\n                (_d = this.southWest) === null || _d === void 0 ? void 0 : _d.query(range, res);\n            }\n        }\n        return res;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}