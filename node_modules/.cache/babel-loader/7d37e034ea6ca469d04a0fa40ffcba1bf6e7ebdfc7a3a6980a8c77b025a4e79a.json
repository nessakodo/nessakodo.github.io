{"ast":null,"code":"import React, { useState, useCallback, useEffect } from 'react';\nimport Calendar, { Skeleton } from 'react-activity-calendar';\nexport { createCalendarTheme } from 'react-activity-calendar';\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\n// GitHub theme\nconst API_URL = 'https://github-contributions-api.jogruber.de/v4/';\nconst DEFAULT_THEME = {\n  level4: '#216e39',\n  level3: '#30a14e',\n  level2: '#40c463',\n  level1: '#9be9a8',\n  level0: '#ebedf0'\n};\nconst transformData = (data, transformFn) => {\n  if (typeof transformFn !== 'function') {\n    return data;\n  }\n  const transformedData = transformFn(data);\n  if (!Array.isArray(transformedData)) {\n    throw new Error(`Passed function transformData must return a list of Day objects.`);\n  }\n  if (transformedData.length > 0) {\n    const testObj = transformedData[0];\n    if (typeof testObj.count !== 'number' || testObj.count < 0) {\n      throw new Error(`Required property \"count: number\" missing or invalid. Got: ${testObj.count}`);\n    }\n    if (typeof testObj.date !== 'string' || !/(\\d{4})-(\\d{2})-(\\d{2})/.test(testObj.date)) {\n      throw new Error(`Required property \"date: YYYY-MM-DD\" missing or invalid. Got: ${testObj.date}`);\n    }\n    if (typeof testObj.level !== 'number' || testObj.level < 0 || testObj.level > 4) {\n      throw new Error(`Required property \"level: 0 | 1 | 2 | 3 | 4\" missing or invalid: Got: ${testObj.level}.`);\n    }\n  }\n  return transformedData;\n};\nasync function fetchCalendarData(username, year) {\n  const response = await fetch(`${API_URL}${username}?y=${year}`);\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.error);\n  }\n  return data;\n}\nconst GitHubCalendar = _ref => {\n  var _props$theme;\n  let {\n    username,\n    year = 'last',\n    transformData: transformDataProp,\n    ...props\n  } = _ref;\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const transformDataCallback = useCallback(contributions => transformData(contributions, transformDataProp), [transformDataProp]);\n  const fetchData = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetchCalendarData(username, year).then(_ref2 => {\n      let {\n        contributions\n      } = _ref2;\n      return setData(transformDataCallback(contributions));\n    }).catch(setError).finally(() => setLoading(false));\n  }, [username, year, transformDataCallback]);\n  useEffect(fetchData, [fetchData]);\n  if (error) {\n    return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"i\", null, \"Unable to fetch contribution data. See console.\"));\n  }\n  if (loading || !data) {\n    return /*#__PURE__*/React.createElement(Skeleton, _extends({}, props, {\n      loading: true\n    }));\n  }\n  const theme = props.color ? undefined : (_props$theme = props.theme) !== null && _props$theme !== void 0 ? _props$theme : DEFAULT_THEME;\n  const labels = {\n    totalCount: `{{count}} contributions in ${year === 'last' ? 'the last year' : '{{year}}'}`\n  };\n  return /*#__PURE__*/React.createElement(Calendar, _extends({\n    data: data,\n    theme: theme,\n    labels: labels\n  }, props));\n};\nexport { GitHubCalendar as default };","map":{"version":3,"mappings":"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","names":["API_URL","DEFAULT_THEME","level4","level3","level2","level1","level0","transformData","data","transformFn","transformedData","Array","isArray","Error","length","testObj","count","date","test","level","fetchCalendarData","username","year","response","fetch","json","ok","error","GitHubCalendar","_ref","transformDataProp","props","setData","useState","loading","setLoading","setError","transformDataCallback","useCallback","contributions","fetchData","then","_ref2","catch","finally","useEffect","React","Skeleton","theme","color","undefined","labels","totalCount","Calendar"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/react-github-calendar/src/constants.ts","/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/react-github-calendar/src/utils.ts","/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/react-github-calendar/src/index.tsx"],"sourcesContent":["// GitHub theme\nimport { Theme } from 'react-activity-calendar';\n\nexport const API_URL = 'https://github-contributions-api.jogruber.de/v4/';\n\nexport const DEFAULT_THEME: Theme = {\n  level4: '#216e39',\n  level3: '#30a14e',\n  level2: '#40c463',\n  level1: '#9be9a8',\n  level0: '#ebedf0',\n};\n","import { CalendarData } from 'react-activity-calendar';\n\nimport { Props } from './index';\n\nexport const transformData = (\n  data: CalendarData,\n  transformFn?: Props['transformData'],\n): CalendarData => {\n  if (typeof transformFn !== 'function') {\n    return data;\n  }\n\n  const transformedData = transformFn(data);\n\n  if (!Array.isArray(transformedData)) {\n    throw new Error(`Passed function transformData must return a list of Day objects.`);\n  }\n\n  if (transformedData.length > 0) {\n    const testObj = transformedData[0];\n\n    if (typeof testObj.count !== 'number' || testObj.count < 0) {\n      throw new Error(\n        `Required property \"count: number\" missing or invalid. Got: ${testObj.count}`,\n      );\n    }\n\n    if (typeof testObj.date !== 'string' || !/(\\d{4})-(\\d{2})-(\\d{2})/.test(testObj.date)) {\n      throw new Error(\n        `Required property \"date: YYYY-MM-DD\" missing or invalid. Got: ${testObj.date}`,\n      );\n    }\n\n    if (typeof testObj.level !== 'number' || testObj.level < 0 || testObj.level > 4) {\n      throw new Error(\n        `Required property \"level: 0 | 1 | 2 | 3 | 4\" missing or invalid: Got: ${testObj.level}.`,\n      );\n    }\n  }\n\n  return transformedData;\n};\n","import React, { FunctionComponent, useCallback, useEffect, useState } from 'react';\nimport Calendar, {\n  CalendarData,\n  createCalendarTheme,\n  Props as CalendarProps,\n  Skeleton,\n} from 'react-activity-calendar';\n\nimport { API_URL, DEFAULT_THEME } from './constants';\nimport { ApiErrorResponse, ApiResponse, Year } from './types';\nimport { transformData } from './utils';\n\nexport interface Props extends Omit<CalendarProps, 'data'> {\n  username: string;\n  year?: Year;\n  transformData?: (data: CalendarData) => CalendarData;\n}\n\nasync function fetchCalendarData(username: string, year: Year): Promise<ApiResponse> {\n  const response = await fetch(`${API_URL}${username}?y=${year}`);\n  const data: ApiResponse | ApiErrorResponse = await response.json();\n\n  if (!response.ok) {\n    throw new Error((data as ApiErrorResponse).error);\n  }\n\n  return data as ApiResponse;\n}\n\nconst GitHubCalendar: FunctionComponent<Props> = ({\n  username,\n  year = 'last',\n  transformData: transformDataProp,\n  ...props\n}) => {\n  const [data, setData] = useState<CalendarData | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<Error | null>(null);\n\n  const transformDataCallback = useCallback(\n    (contributions: CalendarData) => transformData(contributions, transformDataProp),\n    [transformDataProp],\n  );\n\n  const fetchData = useCallback(() => {\n    setLoading(true);\n    setError(null);\n    fetchCalendarData(username, year)\n      .then(({ contributions }) => setData(transformDataCallback(contributions)))\n      .catch(setError)\n      .finally(() => setLoading(false));\n  }, [username, year, transformDataCallback]);\n\n  useEffect(fetchData, [fetchData]);\n\n  if (error) {\n    return (\n      <div>\n        <i>Unable to fetch contribution data. See console.</i>\n      </div>\n    );\n  }\n\n  if (loading || !data) {\n    return <Skeleton {...props} loading />;\n  }\n\n  const theme = props.color ? undefined : props.theme ?? DEFAULT_THEME;\n\n  const labels = {\n    totalCount: `{{count}} contributions in ${year === 'last' ? 'the last year' : '{{year}}'}`,\n  };\n\n  return <Calendar data={data} theme={theme} labels={labels} {...props} />;\n};\n\nexport { createCalendarTheme };\nexport default GitHubCalendar;\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}