{"ast":null,"code":"import { isInArray, itemFromArray, loadFont } from \"../../Utils\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n  getSidesCount() {\n    return 12;\n  }\n  async init(container) {\n    const options = container.actualOptions;\n    if (validTypes.find(t => isInArray(t, options.particles.shape.type))) {\n      const shapeOptions = validTypes.map(t => options.particles.shape.options[t]).find(t => !!t);\n      if (shapeOptions instanceof Array) {\n        const promises = [];\n        for (const character of shapeOptions) {\n          promises.push(loadFont(character));\n        }\n        await Promise.allSettled(promises);\n      } else {\n        if (shapeOptions !== undefined) {\n          await loadFont(shapeOptions);\n        }\n      }\n    }\n  }\n  draw(context, particle, radius, opacity) {\n    var _a, _b, _c;\n    const character = particle.shapeData;\n    if (character === undefined) {\n      return;\n    }\n    const textData = character.value;\n    if (textData === undefined) {\n      return;\n    }\n    const textParticle = particle;\n    if (textParticle.text === undefined) {\n      textParticle.text = textData instanceof Array ? itemFromArray(textData, particle.randomIndexData) : textData;\n    }\n    const text = textParticle.text;\n    const style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\";\n    const weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\";\n    const size = Math.round(radius) * 2;\n    const font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\";\n    const fill = particle.fill;\n    const offsetX = text.length * radius / 2;\n    context.font = \"\".concat(style, \" \").concat(weight, \" \").concat(size, \"px \\\"\").concat(font, \"\\\"\");\n    const pos = {\n      x: -offsetX,\n      y: radius / 2\n    };\n    context.globalAlpha = opacity;\n    if (fill) {\n      context.fillText(text, pos.x, pos.y);\n    } else {\n      context.strokeText(text, pos.x, pos.y);\n    }\n    context.globalAlpha = 1;\n  }\n}","map":{"version":3,"names":["isInArray","itemFromArray","loadFont","validTypes","TextDrawer","getSidesCount","init","container","options","actualOptions","find","t","particles","shape","type","shapeOptions","map","Array","promises","character","push","Promise","allSettled","undefined","draw","context","particle","radius","opacity","_a","_b","_c","shapeData","textData","value","textParticle","text","randomIndexData","style","weight","size","Math","round","font","fill","offsetX","length","concat","pos","x","y","globalAlpha","fillText","strokeText"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/tsparticles/esm/Shapes/Text/TextDrawer.js"],"sourcesContent":["import { isInArray, itemFromArray, loadFont } from \"../../Utils\";\nexport const validTypes = [\"text\", \"character\", \"char\"];\nexport class TextDrawer {\n    getSidesCount() {\n        return 12;\n    }\n    async init(container) {\n        const options = container.actualOptions;\n        if (validTypes.find((t) => isInArray(t, options.particles.shape.type))) {\n            const shapeOptions = validTypes.map((t) => options.particles.shape.options[t]).find((t) => !!t);\n            if (shapeOptions instanceof Array) {\n                const promises = [];\n                for (const character of shapeOptions) {\n                    promises.push(loadFont(character));\n                }\n                await Promise.allSettled(promises);\n            }\n            else {\n                if (shapeOptions !== undefined) {\n                    await loadFont(shapeOptions);\n                }\n            }\n        }\n    }\n    draw(context, particle, radius, opacity) {\n        var _a, _b, _c;\n        const character = particle.shapeData;\n        if (character === undefined) {\n            return;\n        }\n        const textData = character.value;\n        if (textData === undefined) {\n            return;\n        }\n        const textParticle = particle;\n        if (textParticle.text === undefined) {\n            textParticle.text =\n                textData instanceof Array ? itemFromArray(textData, particle.randomIndexData) : textData;\n        }\n        const text = textParticle.text;\n        const style = (_a = character.style) !== null && _a !== void 0 ? _a : \"\";\n        const weight = (_b = character.weight) !== null && _b !== void 0 ? _b : \"400\";\n        const size = Math.round(radius) * 2;\n        const font = (_c = character.font) !== null && _c !== void 0 ? _c : \"Verdana\";\n        const fill = particle.fill;\n        const offsetX = (text.length * radius) / 2;\n        context.font = `${style} ${weight} ${size}px \"${font}\"`;\n        const pos = {\n            x: -offsetX,\n            y: radius / 2,\n        };\n        context.globalAlpha = opacity;\n        if (fill) {\n            context.fillText(text, pos.x, pos.y);\n        }\n        else {\n            context.strokeText(text, pos.x, pos.y);\n        }\n        context.globalAlpha = 1;\n    }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}