{"ast":null,"code":"import { getStyleFromHsl } from \"../../Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n  const {\n    svgData\n  } = imageShape;\n  if (!svgData) {\n    return \"\";\n  }\n  const colorStyle = getStyleFromHsl(color, opacity);\n  if (svgData.includes(\"fill\")) {\n    return svgData.replace(currentColorRegex, () => colorStyle);\n  }\n  const preFillIndex = svgData.indexOf(\">\");\n  return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n  return new Promise(resolve => {\n    image.loading = true;\n    const img = new Image();\n    img.addEventListener(\"load\", () => {\n      image.element = img;\n      image.loading = false;\n      resolve();\n    });\n    img.addEventListener(\"error\", () => {\n      image.error = true;\n      image.loading = false;\n      console.error(`Error tsParticles - loading image: ${image.source}`);\n      resolve();\n    });\n    img.src = image.source;\n  });\n}\nexport async function downloadSvgImage(image) {\n  if (image.type !== \"svg\") {\n    await loadImage(image);\n    return;\n  }\n  image.loading = true;\n  const response = await fetch(image.source);\n  image.loading = false;\n  if (!response.ok) {\n    console.error(\"Error tsParticles - Image not found\");\n    image.error = true;\n  }\n  if (!image.error) {\n    image.svgData = await response.text();\n  }\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n  var _a, _b, _c;\n  const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1);\n  const svg = new Blob([svgColoredData], {\n    type: \"image/svg+xml\"\n  });\n  const domUrl = URL || window.URL || window.webkitURL || window;\n  const url = domUrl.createObjectURL(svg);\n  const img = new Image();\n  const imageRes = {\n    data: Object.assign(Object.assign({}, image), {\n      svgData: svgColoredData\n    }),\n    ratio: imageData.width / imageData.height,\n    replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n    source: imageData.src\n  };\n  img.addEventListener(\"load\", () => {\n    const pImage = particle.image;\n    if (pImage) {\n      pImage.loaded = true;\n      image.element = img;\n    }\n    domUrl.revokeObjectURL(url);\n  });\n  img.addEventListener(\"error\", () => {\n    domUrl.revokeObjectURL(url);\n    const img2 = Object.assign(Object.assign({}, image), {\n      error: false,\n      loading: true\n    });\n    loadImage(img2).then(() => {\n      const pImage = particle.image;\n      if (pImage) {\n        image.element = img2.element;\n        pImage.loaded = true;\n      }\n    });\n  });\n  img.src = url;\n  return imageRes;\n}","map":{"version":3,"names":["getStyleFromHsl","currentColorRegex","replaceColorSvg","imageShape","color","opacity","svgData","colorStyle","includes","replace","preFillIndex","indexOf","substring","loadImage","image","Promise","resolve","loading","img","Image","addEventListener","element","error","console","source","src","downloadSvgImage","type","response","fetch","ok","text","replaceImageColor","imageData","particle","_a","_b","_c","svgColoredData","value","svg","Blob","domUrl","URL","window","webkitURL","url","createObjectURL","imageRes","data","Object","assign","ratio","width","height","replaceColor","replace_color","pImage","loaded","revokeObjectURL","img2","then"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/tsparticles/esm/Shapes/Image/Utils.js"],"sourcesContent":["import { getStyleFromHsl } from \"../../Utils\";\nconst currentColorRegex = /(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\\((-?\\d+%?[,\\s]+){2,3}\\s*[\\d.]+%?\\))|currentcolor/gi;\nfunction replaceColorSvg(imageShape, color, opacity) {\n    const { svgData } = imageShape;\n    if (!svgData) {\n        return \"\";\n    }\n    const colorStyle = getStyleFromHsl(color, opacity);\n    if (svgData.includes(\"fill\")) {\n        return svgData.replace(currentColorRegex, () => colorStyle);\n    }\n    const preFillIndex = svgData.indexOf(\">\");\n    return `${svgData.substring(0, preFillIndex)} fill=\"${colorStyle}\"${svgData.substring(preFillIndex)}`;\n}\nexport async function loadImage(image) {\n    return new Promise((resolve) => {\n        image.loading = true;\n        const img = new Image();\n        img.addEventListener(\"load\", () => {\n            image.element = img;\n            image.loading = false;\n            resolve();\n        });\n        img.addEventListener(\"error\", () => {\n            image.error = true;\n            image.loading = false;\n            console.error(`Error tsParticles - loading image: ${image.source}`);\n            resolve();\n        });\n        img.src = image.source;\n    });\n}\nexport async function downloadSvgImage(image) {\n    if (image.type !== \"svg\") {\n        await loadImage(image);\n        return;\n    }\n    image.loading = true;\n    const response = await fetch(image.source);\n    image.loading = false;\n    if (!response.ok) {\n        console.error(\"Error tsParticles - Image not found\");\n        image.error = true;\n    }\n    if (!image.error) {\n        image.svgData = await response.text();\n    }\n}\nexport function replaceImageColor(image, imageData, color, particle) {\n    var _a, _b, _c;\n    const svgColoredData = replaceColorSvg(image, color, (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1);\n    const svg = new Blob([svgColoredData], { type: \"image/svg+xml\" });\n    const domUrl = URL || window.URL || window.webkitURL || window;\n    const url = domUrl.createObjectURL(svg);\n    const img = new Image();\n    const imageRes = {\n        data: Object.assign(Object.assign({}, image), { svgData: svgColoredData }),\n        ratio: imageData.width / imageData.height,\n        replaceColor: (_c = imageData.replaceColor) !== null && _c !== void 0 ? _c : imageData.replace_color,\n        source: imageData.src,\n    };\n    img.addEventListener(\"load\", () => {\n        const pImage = particle.image;\n        if (pImage) {\n            pImage.loaded = true;\n            image.element = img;\n        }\n        domUrl.revokeObjectURL(url);\n    });\n    img.addEventListener(\"error\", () => {\n        domUrl.revokeObjectURL(url);\n        const img2 = Object.assign(Object.assign({}, image), { error: false, loading: true });\n        loadImage(img2).then(() => {\n            const pImage = particle.image;\n            if (pImage) {\n                image.element = img2.element;\n                pImage.loaded = true;\n            }\n        });\n    });\n    img.src = url;\n    return imageRes;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}