{"ast":null,"code":"import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n  if (!children) {\n    return null;\n  }\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(\"Children of \".concat(componentName, \" can contain only ProgressBar \") + \"components. Found \".concat(childIdentifier, \".\"));\n  });\n  return error;\n}\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\nfunction renderProgressBar(_ref, ref) {\n  let {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    className,\n    style,\n    variant,\n    bsPrefix,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, \"\".concat(bsPrefix, \"-bar\"), {\n      [\"bg-\".concat(variant)]: variant,\n      [\"\".concat(bsPrefix, \"-bar-animated\")]: animated,\n      [\"\".concat(bsPrefix, \"-bar-striped\")]: animated || striped\n    }),\n    style: {\n      width: \"\".concat(getPercentage(now, min, max), \"%\"),\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\nconst ProgressBar = /*#__PURE__*/React.forwardRef((_ref2, ref) => {\n  let {\n    isChild,\n    ...props\n  } = _ref2;\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;","map":{"version":3,"names":["classNames","React","cloneElement","useBootstrapPrefix","map","jsx","_jsx","ROUND_PRECISION","onlyProgressBar","props","propName","componentName","children","error","Children","forEach","child","element","ProgressBar","type","childType","childIdentifier","isValidElement","displayName","name","Error","concat","defaultProps","min","max","animated","isChild","visuallyHidden","striped","getPercentage","now","percentage","Math","round","renderProgressBar","_ref","ref","label","className","style","variant","bsPrefix","role","width","forwardRef","_ref2","wrapperProps"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/react-bootstrap/esm/ProgressBar.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { cloneElement } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { map } from './ElementChildren';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ROUND_PRECISION = 1000;\n/**\n * Validate that children, if any, are instances of `<ProgressBar>`.\n */\n\nfunction onlyProgressBar(props, propName, componentName) {\n  const children = props[propName];\n\n  if (!children) {\n    return null;\n  }\n\n  let error = null;\n  React.Children.forEach(children, child => {\n    if (error) {\n      return;\n    }\n    /**\n     * Compare types in a way that works with libraries that patch and proxy\n     * components like react-hot-loader.\n     *\n     * see https://github.com/gaearon/react-hot-loader#checking-element-types\n     */\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n\n\n    const element = /*#__PURE__*/_jsx(ProgressBar, {});\n\n    if (child.type === element.type) return;\n    const childType = child.type;\n    const childIdentifier = /*#__PURE__*/React.isValidElement(child) ? childType.displayName || childType.name || childType : child;\n    error = new Error(`Children of ${componentName} can contain only ProgressBar ` + `components. Found ${childIdentifier}.`);\n  });\n  return error;\n}\n\nconst defaultProps = {\n  min: 0,\n  max: 100,\n  animated: false,\n  isChild: false,\n  visuallyHidden: false,\n  striped: false\n};\n\nfunction getPercentage(now, min, max) {\n  const percentage = (now - min) / (max - min) * 100;\n  return Math.round(percentage * ROUND_PRECISION) / ROUND_PRECISION;\n}\n\nfunction renderProgressBar({\n  min,\n  now,\n  max,\n  label,\n  visuallyHidden,\n  striped,\n  animated,\n  className,\n  style,\n  variant,\n  bsPrefix,\n  ...props\n}, ref) {\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...props,\n    role: \"progressbar\",\n    className: classNames(className, `${bsPrefix}-bar`, {\n      [`bg-${variant}`]: variant,\n      [`${bsPrefix}-bar-animated`]: animated,\n      [`${bsPrefix}-bar-striped`]: animated || striped\n    }),\n    style: {\n      width: `${getPercentage(now, min, max)}%`,\n      ...style\n    },\n    \"aria-valuenow\": now,\n    \"aria-valuemin\": min,\n    \"aria-valuemax\": max,\n    children: visuallyHidden ? /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    }) : label\n  });\n}\n\nconst ProgressBar = /*#__PURE__*/React.forwardRef(({\n  isChild,\n  ...props\n}, ref) => {\n  props.bsPrefix = useBootstrapPrefix(props.bsPrefix, 'progress');\n\n  if (isChild) {\n    return renderProgressBar(props, ref);\n  }\n\n  const {\n    min,\n    now,\n    max,\n    label,\n    visuallyHidden,\n    striped,\n    animated,\n    bsPrefix,\n    variant,\n    className,\n    children,\n    ...wrapperProps\n  } = props;\n  return /*#__PURE__*/_jsx(\"div\", {\n    ref: ref,\n    ...wrapperProps,\n    className: classNames(className, bsPrefix),\n    children: children ? map(children, child => /*#__PURE__*/cloneElement(child, {\n      isChild: true\n    })) : renderProgressBar({\n      min,\n      now,\n      max,\n      label,\n      visuallyHidden,\n      striped,\n      animated,\n      bsPrefix,\n      variant\n    }, ref)\n  });\n});\nProgressBar.displayName = 'ProgressBar';\nProgressBar.defaultProps = defaultProps;\nexport default ProgressBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}