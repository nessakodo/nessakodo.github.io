{"ast":null,"code":"var __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Emitters_engine;\nimport { deepExtend, itemFromArray } from \"../../Utils\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n  constructor(engine, container) {\n    this.container = container;\n    _Emitters_engine.set(this, void 0);\n    __classPrivateFieldSet(this, _Emitters_engine, engine, \"f\");\n    this.array = [];\n    this.emitters = [];\n    this.interactivityEmitters = [];\n    const overridableContainer = container;\n    overridableContainer.getEmitter = idxOrName => idxOrName === undefined || typeof idxOrName === \"number\" ? this.array[idxOrName || 0] : this.array.find(t => t.name === idxOrName);\n    overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n    overridableContainer.removeEmitter = idxOrName => {\n      const emitter = overridableContainer.getEmitter(idxOrName);\n      if (emitter) {\n        this.removeEmitter(emitter);\n      }\n    };\n    overridableContainer.playEmitter = idxOrName => {\n      const emitter = overridableContainer.getEmitter(idxOrName);\n      if (emitter) {\n        emitter.externalPlay();\n      }\n    };\n    overridableContainer.pauseEmitter = idxOrName => {\n      const emitter = overridableContainer.getEmitter(idxOrName);\n      if (emitter) {\n        emitter.externalPause();\n      }\n    };\n  }\n  init(options) {\n    var _a, _b;\n    if (!options) {\n      return;\n    }\n    if (options.emitters) {\n      if (options.emitters instanceof Array) {\n        this.emitters = options.emitters.map(s => {\n          const tmp = new Emitter();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.emitters instanceof Array) {\n          this.emitters = new Emitter();\n        }\n        this.emitters.load(options.emitters);\n      }\n    }\n    const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n    if (interactivityEmitters) {\n      if (interactivityEmitters instanceof Array) {\n        this.interactivityEmitters = interactivityEmitters.map(s => {\n          const tmp = new Emitter();\n          tmp.load(s);\n          return tmp;\n        });\n      } else {\n        if (this.interactivityEmitters instanceof Array) {\n          this.interactivityEmitters = new Emitter();\n        }\n        this.interactivityEmitters.load(interactivityEmitters);\n      }\n    }\n    if (this.emitters instanceof Array) {\n      for (const emitterOptions of this.emitters) {\n        this.addEmitter(emitterOptions);\n      }\n    } else {\n      this.addEmitter(this.emitters);\n    }\n  }\n  play() {\n    for (const emitter of this.array) {\n      emitter.play();\n    }\n  }\n  pause() {\n    for (const emitter of this.array) {\n      emitter.pause();\n    }\n  }\n  stop() {\n    this.array = [];\n  }\n  update(delta) {\n    for (const emitter of this.array) {\n      emitter.update(delta);\n    }\n  }\n  handleClickMode(mode) {\n    const container = this.container;\n    const emitterOptions = this.emitters;\n    const modeEmitters = this.interactivityEmitters;\n    if (mode === \"emitter\") {\n      let emitterModeOptions;\n      if (modeEmitters instanceof Array) {\n        if (modeEmitters.length > 0) {\n          emitterModeOptions = itemFromArray(modeEmitters);\n        }\n      } else {\n        emitterModeOptions = modeEmitters;\n      }\n      const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : emitterOptions instanceof Array ? itemFromArray(emitterOptions) : emitterOptions;\n      const ePosition = container.interactivity.mouse.clickPosition;\n      this.addEmitter(deepExtend({}, emittersOptions), ePosition);\n    }\n  }\n  resize() {\n    for (const emitter of this.array) {\n      emitter.resize();\n    }\n  }\n  addEmitter(options, position) {\n    const emitterOptions = new Emitter();\n    emitterOptions.load(options);\n    const emitter = new EmitterInstance(__classPrivateFieldGet(this, _Emitters_engine, \"f\"), this, this.container, emitterOptions, position);\n    this.array.push(emitter);\n    return emitter;\n  }\n  removeEmitter(emitter) {\n    const index = this.array.indexOf(emitter);\n    if (index >= 0) {\n      this.array.splice(index, 1);\n    }\n  }\n}\n_Emitters_engine = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Emitters_engine","deepExtend","itemFromArray","Emitter","EmitterInstance","Emitters","constructor","engine","container","array","emitters","interactivityEmitters","overridableContainer","getEmitter","idxOrName","undefined","find","t","name","addEmitter","options","position","removeEmitter","emitter","playEmitter","externalPlay","pauseEmitter","externalPause","init","_a","_b","Array","map","s","tmp","load","interactivity","modes","emitterOptions","play","pause","stop","update","delta","handleClickMode","mode","modeEmitters","emitterModeOptions","length","emittersOptions","ePosition","mouse","clickPosition","resize","push","index","indexOf","splice","WeakMap"],"sources":["/Users/nessakodo/coding/kodo/nessakodo.github.io/node_modules/tsparticles/esm/Plugins/Emitters/Emitters.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Emitters_engine;\nimport { deepExtend, itemFromArray } from \"../../Utils\";\nimport { Emitter } from \"./Options/Classes/Emitter\";\nimport { EmitterInstance } from \"./EmitterInstance\";\nexport class Emitters {\n    constructor(engine, container) {\n        this.container = container;\n        _Emitters_engine.set(this, void 0);\n        __classPrivateFieldSet(this, _Emitters_engine, engine, \"f\");\n        this.array = [];\n        this.emitters = [];\n        this.interactivityEmitters = [];\n        const overridableContainer = container;\n        overridableContainer.getEmitter = (idxOrName) => idxOrName === undefined || typeof idxOrName === \"number\"\n            ? this.array[idxOrName || 0]\n            : this.array.find((t) => t.name === idxOrName);\n        overridableContainer.addEmitter = (options, position) => this.addEmitter(options, position);\n        overridableContainer.removeEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                this.removeEmitter(emitter);\n            }\n        };\n        overridableContainer.playEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPlay();\n            }\n        };\n        overridableContainer.pauseEmitter = (idxOrName) => {\n            const emitter = overridableContainer.getEmitter(idxOrName);\n            if (emitter) {\n                emitter.externalPause();\n            }\n        };\n    }\n    init(options) {\n        var _a, _b;\n        if (!options) {\n            return;\n        }\n        if (options.emitters) {\n            if (options.emitters instanceof Array) {\n                this.emitters = options.emitters.map((s) => {\n                    const tmp = new Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.emitters instanceof Array) {\n                    this.emitters = new Emitter();\n                }\n                this.emitters.load(options.emitters);\n            }\n        }\n        const interactivityEmitters = (_b = (_a = options.interactivity) === null || _a === void 0 ? void 0 : _a.modes) === null || _b === void 0 ? void 0 : _b.emitters;\n        if (interactivityEmitters) {\n            if (interactivityEmitters instanceof Array) {\n                this.interactivityEmitters = interactivityEmitters.map((s) => {\n                    const tmp = new Emitter();\n                    tmp.load(s);\n                    return tmp;\n                });\n            }\n            else {\n                if (this.interactivityEmitters instanceof Array) {\n                    this.interactivityEmitters = new Emitter();\n                }\n                this.interactivityEmitters.load(interactivityEmitters);\n            }\n        }\n        if (this.emitters instanceof Array) {\n            for (const emitterOptions of this.emitters) {\n                this.addEmitter(emitterOptions);\n            }\n        }\n        else {\n            this.addEmitter(this.emitters);\n        }\n    }\n    play() {\n        for (const emitter of this.array) {\n            emitter.play();\n        }\n    }\n    pause() {\n        for (const emitter of this.array) {\n            emitter.pause();\n        }\n    }\n    stop() {\n        this.array = [];\n    }\n    update(delta) {\n        for (const emitter of this.array) {\n            emitter.update(delta);\n        }\n    }\n    handleClickMode(mode) {\n        const container = this.container;\n        const emitterOptions = this.emitters;\n        const modeEmitters = this.interactivityEmitters;\n        if (mode === \"emitter\") {\n            let emitterModeOptions;\n            if (modeEmitters instanceof Array) {\n                if (modeEmitters.length > 0) {\n                    emitterModeOptions = itemFromArray(modeEmitters);\n                }\n            }\n            else {\n                emitterModeOptions = modeEmitters;\n            }\n            const emittersOptions = emitterModeOptions !== null && emitterModeOptions !== void 0 ? emitterModeOptions : (emitterOptions instanceof Array ? itemFromArray(emitterOptions) : emitterOptions);\n            const ePosition = container.interactivity.mouse.clickPosition;\n            this.addEmitter(deepExtend({}, emittersOptions), ePosition);\n        }\n    }\n    resize() {\n        for (const emitter of this.array) {\n            emitter.resize();\n        }\n    }\n    addEmitter(options, position) {\n        const emitterOptions = new Emitter();\n        emitterOptions.load(options);\n        const emitter = new EmitterInstance(__classPrivateFieldGet(this, _Emitters_engine, \"f\"), this, this.container, emitterOptions, position);\n        this.array.push(emitter);\n        return emitter;\n    }\n    removeEmitter(emitter) {\n        const index = this.array.indexOf(emitter);\n        if (index >= 0) {\n            this.array.splice(index, 1);\n        }\n    }\n}\n_Emitters_engine = new WeakMap();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}